require 'rails_helper'

RSpec.describe UsersController, type: :controller do
<<<<<<< HEAD

    context '#new' do
            it 'render new template' do
                get :new
                expect(response).to render_template("new")
            end   
    end

    context 'Checking user creation!' do
        before :each do
            User.delete_all
            User.create({
               :email => "account1@lasso.app", 
               :username => "account1", 
               :password => "123"
            })
            User.create({
                :email => "account2@lasso.app", 
                :username => "account2", 
                :password => "123", 
            })
            @users = User.all
        end

        describe 'Creating a user.' do
            it 'Should successfully create an user.' do
                users_count = User.all.count
                user = {
                    :email => "account3@lasso.app", 
                    :username => "account3", 
                    :password => "123", 
                }
                
                get :create, user: user

                expect(response).to redirect_to(:root)
                expect(User.all.count).to eq(users_count + 1)
            end

            it 'Should not create an user when the email already is registered.' do 
                users_count = User.all.count
                user = {
                    :email => "account1@lasso.app", 
                    :username => "account1", 
                    :password => "123", 
                }
                
                get :create, user: user

                expect(flash[:notice]).to eq("Email has already been taken and Username has already been taken")
                expect(response).to have_http_status(200)
                expect(User.all.count).to eq(users_count)
            end 
        end
    end


end 
=======
    describe 'GET /register' do
        it 'new' do
            get :new
            expect(response).to have_http_status(:success)
        end
    end

    describe 'POST /users' do
        it 'create new user successfully' do
            user = {
                :email => 'user1@columbia.edu',
                :username => 'user1',
                :password => 'password'
            }

            post :create, user: user
            
            expect(User.all.count).to eq(1)
            expect(session[:user_id]).to eq(1)
            expect(response).to redirect_to(root_path)
        end

        it 'failed to create new users because duplicate of emails' do
            expect(User.all.count).to eq(0)

            user = {
                :email => 'user1@columbia.edu',
                :username => 'user1',
                :password => 'password'
            }

            post :create, user: user
            expect(User.all.count).to eq(1)

            post :create, user: {
                :email => 'user1@columbia.edu',
                :username => 'user2',
                :password => 'password2'
            }
            expect(User.all.count).to eq(1)
            expect(flash[:notice]).to eq('Email has already been taken')
            expect(response).to render_template('new')
        end
    end
end
>>>>>>> 2049cb12a855a415b13e718242f3815070c3cacc
